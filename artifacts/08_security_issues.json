{
  "strengths": [
    {
      "file": "src/loaders/yaml-loader.ts",
      "lines": "20-130",
      "note": "SecureYAMLLoader enforces base directory, file size limits, symlink rejection, and AJV schema validation before returning data."
    },
    {
      "file": "src/tools/import-template.ts",
      "lines": "90-147",
      "note": "importTemplate validates template paths via safeFilePath and runs 6-layer security pipeline before materializing imports."
    },
    {
      "file": "src/tools/export-template.ts",
      "lines": "70-142",
      "note": "Export flow sanitizes output path and restricts extensions, reducing traversal risk."
    }
  ],
  "warnings": [
    {
      "file": "src/tools/split-mission.ts",
      "line": 217,
      "issue": "Input validation only checks path existence; missionFile is resolved via fs.readFile without baseDir restriction or safeFilePath usage.",
      "risk": "path_traversal",
      "recommendation": "Introduce safeFilePath with configured workspace root before reading/ writing sub-missions."
    },
    {
      "file": "src/tools/split-mission.ts",
      "line": 188,
      "issue": "writeSubMissions writes files into params.outputDir (defaulting to dirname of user-supplied missionFile) without sanitization, enabling overwrite outside workspace if absolute paths supplied.",
      "risk": "arbitrary_file_write",
      "recommendation": "Require outputDir under managed workspace and use safeFilePath."
    },
    {
      "file": "src/tools/optimize-tokens.ts",
      "line": 66,
      "issue": "updateTokenOptimization resolves missionFile directly and overwrites original plus .backup without safeFilePath checks.",
      "risk": "arbitrary_file_write",
      "recommendation": "Constrain missionFile to allowed roots and write backups in dedicated directory."
    },
    {
      "file": "src/tools/optimize-tokens.ts",
      "line": 98,
      "issue": "If optimization fails after backup creation, the original file may remain replaced (no rollback).",
      "risk": "data_loss",
      "recommendation": "Write optimized content to temp file, verify success, then atomic rename."
    },
    {
      "file": "src/intelligence/token-counters.ts",
      "line": 154,
      "issue": "Fallback token counting exposes model names & text lengths via console.warn, which may leak metadata when running in shared environments.",
      "risk": "information_leakage",
      "recommendation": "Guard telemetry output behind configurable logger and redact sensitive fields."
    }
  ],
  "notes": [
    "npm audit (2025-10-26 UTC) reported no vulnerable dependencies (npm audit --json).",
    "SecurityValidator enforces action allowlists but depends on caller supplying semantic rules; defaults allow broad actions."
  ]
}