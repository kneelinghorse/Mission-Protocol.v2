{
  "status": "failed",
  "summary": {
    "testSuites": {
      "total": 85,
      "passed": 80,
      "failed": 5
    },
    "tests": {
      "total": 1031,
      "passed": 1025,
      "failed": 4,
      "skipped": 2
    },
    "coverageGenerated": false
  },
  "failureReasons": [
    {
      "suite": "tests/tools/optimize-tokens.test.ts",
      "error": "TypeError: Cannot read properties of undefined (reading 'name')",
      "location": "tests/tools/optimize-tokens.test.ts:235",
      "notes": "Tool definition export was renamed to updateTokenOptimizationToolDefinition; tests still reference optimizeTokensToolDefinition."
    },
    {
      "suite": "tests/loaders/yaml-loader.test.ts",
      "error": "TS18046: 'data' is of type 'unknown'",
      "location": "tests/loaders/yaml-loader.test.ts:59",
      "notes": "SecureYAMLLoader.load returns unknown; tests require explicit typing before dereferencing."
    },
    {
      "suite": "tests/versioning/migration-engine.test.ts",
      "error": "TS18048: 'result.migratedTemplate' is possibly 'undefined'",
      "location": "tests/versioning/migration-engine.test.ts:727",
      "notes": "Type guard missing when accessing migratedTemplate on MigrationResult."
    },
    {
      "suite": "tests/integration/phase4-intelligence-flow.test.ts",
      "error": "TS2353: Object literal may only specify known properties, and 'outputFormat' does not exist in type 'AnalyzeDependenciesArgs'",
      "location": "tests/integration/phase4-intelligence-flow.test.ts:254",
      "notes": "Integration test still passes legacy parameter outputFormat removed from analyzeDependencies tool."
    },
    {
      "suite": "tests/import-export/security-validator.test.ts",
      "error": "TS18046: 'template.spec.phases' is of type 'unknown'",
      "location": "tests/import-export/security-validator.test.ts:186",
      "notes": "SecurityValidator tests need type assertions after SecureYAMLLoader changes."
    }
  ],
  "notes": [
    "Global coverage report could not be generated because Jest aborted after TypeScript compilation errors.",
    "Focused run of tests/tools/optimize-tokens.test.ts reports statement coverage 78.51% with thresholds unmet due to failures."
  ]
}