[
  {
    "id": "R01",
    "title": "Modularize MCP server bootstrap",
    "impact": "high",
    "effort": "medium",
    "risk": "low",
    "summary": "Split src/index.ts into transport, tool-registration, and context modules to reduce the 880-line entry point and simplify testing.",
    "evidence": "src/index.ts:1"
  },
  {
    "id": "R02",
    "title": "Sanitize mission file paths for write-capable tools",
    "impact": "high",
    "effort": "low",
    "risk": "medium",
    "summary": "Wrap split_mission and update_token_optimization inputs with safeFilePath and restrict outputDir to a configured workspace root.",
    "evidence": "src/tools/split-mission.ts:217, src/tools/optimize-tokens.ts:66"
  },
  {
    "id": "R03",
    "title": "Restore jest suite by aligning tool definition exports",
    "impact": "high",
    "effort": "low",
    "risk": "low",
    "summary": "Update tests or re-export optimizeTokensToolDefinition to match new naming, unblocking 4 failing assertions.",
    "evidence": "tests/tools/optimize-tokens.test.ts:235"
  },
  {
    "id": "R04",
    "title": "Type SecureYAMLLoader results in tests",
    "impact": "medium",
    "effort": "low",
    "risk": "low",
    "summary": "Add explicit generics or helper wrappers so loader.load<T>() returns typed data, avoiding TS18046 in YAML suites.",
    "evidence": "tests/loaders/yaml-loader.test.ts:59"
  },
  {
    "id": "R05",
    "title": "Guard migration-engine expectations",
    "impact": "medium",
    "effort": "low",
    "risk": "low",
    "summary": "Introduce non-null checks or refined types for migratedTemplate before assertions to fix TS18048 failures.",
    "evidence": "tests/versioning/migration-engine.test.ts:727"
  },
  {
    "id": "R06",
    "title": "Update integration tests for new dependency analyzer API",
    "impact": "medium",
    "effort": "low",
    "risk": "low",
    "summary": "Remove legacy outputFormat parameter from phase4 intelligence flow tests and adjust expected payloads.",
    "evidence": "tests/integration/phase4-intelligence-flow.test.ts:254"
  },
  {
    "id": "R07",
    "title": "Harden security validator tests against unknown shapes",
    "impact": "medium",
    "effort": "low",
    "risk": "low",
    "summary": "Use type guards for template.spec.phases in security validator tests after stricter SecureYAMLLoader changes.",
    "evidence": "tests/import-export/security-validator.test.ts:186"
  },
  {
    "id": "R08",
    "title": "Preload tokenizer models and silence heuristic telemetry in CI",
    "impact": "medium",
    "effort": "medium",
    "risk": "medium",
    "summary": "Bundle claude tokenizer assets with dist build or stub them in tests to avoid fallbackCount warnings and noisy stderr.",
    "evidence": "src/intelligence/token-counters.ts:154"
  },
  {
    "id": "R09",
    "title": "Introduce eslint + prettier baseline",
    "impact": "medium",
    "effort": "medium",
    "risk": "low",
    "summary": "Add lint scripts and configuration to enforce consistent style and catch dead imports earlier.",
    "evidence": "package.json:scripts"
  },
  {
    "id": "R10",
    "title": "Refactor template extractor branching hot spots",
    "impact": "medium",
    "effort": "high",
    "risk": "medium",
    "summary": "Break template-extractor pipeline (63 decision points) into focused modules with unit coverage for each phase.",
    "evidence": "artifacts/04_complexity_metrics.json -> src/extraction/template-extractor.ts"
  },
  {
    "id": "R11",
    "title": "Parallelize dependency resolution during template import",
    "impact": "medium",
    "effort": "medium",
    "risk": "medium",
    "summary": "Batch resolveDependencies with Promise.allSettled and shared caching to reduce import latency for large packs.",
    "evidence": "src/import-export/template-importer.ts:170"
  },
  {
    "id": "R12",
    "title": "Document remaining public exports",
    "impact": "low",
    "effort": "medium",
    "risk": "low",
    "summary": "Add JSDoc to 36 undocumented exports to raise API documentation coverage from 61.54% to >90%.",
    "evidence": "artifacts/09_doc_coverage.json"
  },
  {
    "id": "R13",
    "title": "Align coverage thresholds with current totals",
    "impact": "low",
    "effort": "low",
    "risk": "medium",
    "summary": "Either restore global coverage >90% or adjust jest thresholds while remediation is underway to keep CI actionable.",
    "evidence": "artifacts/05_coverage_report.json"
  },
  {
    "id": "R14",
    "title": "Add workspace allowlist for write-enabled tools",
    "impact": "high",
    "effort": "medium",
    "risk": "medium",
    "summary": "Centralize allowed base directory configuration and reuse across optimize, split, and extract tools.",
    "evidence": "src/tools/split-mission.ts:188"
  },
  {
    "id": "R15",
    "title": "Add regression tests for tool definitions",
    "impact": "medium",
    "effort": "low",
    "risk": "low",
    "summary": "Create snapshot tests around tool definitions to detect accidental renames or schema drift early.",
    "evidence": "tests/tools/optimize-tokens.test.ts"
  }
]